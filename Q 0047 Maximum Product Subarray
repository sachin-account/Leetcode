Given an array Arr[] that contains N integers (may be positive, negative or zero). Find the product of the maximum product subarray.

Example 1:

Input:
N = 5
Arr[] = {6, -3, -10, 0, 2}
Output: 180
Explanation: Subarray with maximum product
is [6, -3, -10] which gives product as 180.
Example 2:

Input:
N = 6
Arr[] = {2, 3, 4, 5, -1, 0}
Output: 120
Explanation: Subarray with maximum product
is [2, 3, 4, 5] which gives product as 120.






class Solution{
public:

    long long maxFunc(long long x,long long y)
    {
        if(x >= y)
          return x;
        return y;
    }
	
	long long minFunc(long long x,long long y)
    {
        if(x >= y)
          return y;
        return x;
    }
	
	long long maxProduct(vector<int> a, int n)
	{
	    long  long maxi=a[0];
      long  long mini=a[0];
      long  long res=a[0]; 
        
	  for(int i=1;i<n;i++)
	  {
	       if(a[i] < 0)
	          swap(maxi,mini);
	      
	       maxi=maxFunc(a[i],a[i]*maxi);
	       mini=minFunc(a[i],a[i]*mini);
	       
        res=maxFunc(res,maxi);
	  }

return res;  
}
};
