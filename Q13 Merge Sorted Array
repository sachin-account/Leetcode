Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.

class Solution {
public:
void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) 
 {
   int i=0,j=0;//pointers 
   
    if(nums2.size()==0)//special case
        return ;
   
   while(i<m)
   {
      if(nums1[i]<=nums2[0])//increasing pointre if smallest is nums1[i]
      {
         i++;
      }
       else
       {
           swap(nums1[i],nums2[0]);//using space of nums2 if not then nums1[i] will lost  
           sort(nums2.begin(),nums2.end());//sorting after swap so that pointer j=0 always point to minimum of nums2
           i++;
       }   
   }   
    
    while(j<n)//after i>=m all elemnts of nums2 will be inserted in nums1
    {
        nums1[i]=nums2[j];
        i++;
        j++;
    }
    
    
  }
};
